:root {
	/* --transition: 0.0625s all ease-in-out; */
	--transition: none;
}

input,
button,
body {
	font-family: "Proxima Nova", sans-serif;
}

body {
	text-transform: uppercase;
}

label {
	display: inline-block;
	text-transform: initial;
}

code,
pre {
	text-transform: initial;
	font-size: 12px;
}

input,
button {
	box-shadow: 0 0 16px #00000020;
	transition: var(--transition);
	will-change: opacity;
	opacity: 0.5;
}

input:hover,
button:hover {
	box-shadow: none;
	/* transform: scale(0.99); */
	opacity: 1;
}

.contract {
	background-color: #00000020;
	padding: 16px;
	margin: 16px auto;
	text-align: center;
}

.contract > form {
	text-align: center;
}

.contract > form > ol {
	display: none;
}
.contract > form.open > ol {
	display: initial;
}

.contract > form.open {
	min-height: 192px;
}

.contract > form {
	min-height: 52px;
	background-color: #00000020;
	max-width: 703px;
	display: inline-block;
	vertical-align: middle;
	margin: 4px;
	width: 320px;
}

.contract > form ol {
	position: relative;
	list-style: none;
	padding: 0;
}
.contract > form ol li input {
	width: calc(100% - 48px);
}
.contract > form button {
	pointer-events: none;
	box-shadow: none;
	opacity: 0.25;
	font-size: 20px;
	background-color: transparent;
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
	/* text-overflow: ellipsis; */
	/* overflow: hidden; */
	/* word-break: break-all; */
}

.contract > form.react-draggable-dragged {
	position: relative;
	backdrop-filter: blur(var(--blur));
	--webkit-backdrop-filter: blur(var(--blur));
}
.contract > form ol {
	opacity: 0;
}
.contract > form input {
	padding: 0;
}
.contract > form ol {
	min-height: 48px;
}

.contract > form li {
	/* padding: 0; */
	/* height: 0; */
}

.contract > form li {
	height: 48px;
	padding: 8px;
}

.contract > form input {
	padding: 16px 24px;
}

.contract > form:hover ol {
	opacity: 1;
}
.contract > form button {
	position: absolute;
	left: 0;
	width: 100%;
	top: calc(50% - 24px);
	/* font-family: monospace; */
	/* color: #fff; */
}

.contract > form:hover button {
	opacity: 0.125;
}

textarea {
	background-color: transparent;
	pointer-events: none;
	position: absolute;
	bottom: 0;
	left: 0;
	width: calc(100% - 16px);
}

.react-draggable {
	cursor: grab;
}
.react-draggable:active {
	cursor: grabbing !important;
	/* opacity: 0.5; */
	/* background-color: transparent !important; */
	/* background-color: #00000040 !important; */
}
.react-draggable-dragged {
	z-index: 1;
}

.react-draggable-dragged:hover {
	z-index: 2;
}

#connect {
	width: calc(100% - 96px);
	height: calc(100% - 96px);
	position: absolute;
}
